{
    "metadata": {
        "programName": "OWASP ZAP",
        "version": "2.16.1",
        "generated": "2025-04-14 12:15:24",
        "site": {
            "name": "https://demo.owasp-juice.shop/",
            "host": "demo.owasp-juice.shop",
            "port": "443",
            "ssl": "true"
        }
    },
    "alerts": [
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10020",
            "cweid": "1021",
            "confidence": "Medium",
            "sourceMessageId": 3,
            "wascid": "15",
            "description": "The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.",
            "messageId": "3",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-1021": "https://cwe.mitre.org/data/definitions/1021.html",
                "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
            "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.",
            "alert": "Missing Anti-clickjacking Header",
            "param": "x-frame-options",
            "attack": "",
            "name": "Missing Anti-clickjacking Header",
            "risk": "Medium",
            "id": "0",
            "alertRef": "10020-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=2286",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 3,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "3",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "2",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=2271",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "3",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 3,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "3",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "4",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 3,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "3",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "6",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
            "method": "GET",
            "evidence": "",
            "pluginId": "10021",
            "cweid": "693",
            "confidence": "Medium",
            "sourceMessageId": 1,
            "wascid": "15",
            "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
            "messageId": "1",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
            "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
            "alert": "X-Content-Type-Options Header Missing",
            "param": "x-content-type-options",
            "attack": "",
            "name": "X-Content-Type-Options Header Missing",
            "risk": "Low",
            "id": "8",
            "alertRef": "10021"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10020",
            "cweid": "1021",
            "confidence": "Medium",
            "sourceMessageId": 13,
            "wascid": "15",
            "description": "The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.",
            "messageId": "13",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-1021": "https://cwe.mitre.org/data/definitions/1021.html",
                "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
            "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.",
            "alert": "Missing Anti-clickjacking Header",
            "param": "x-frame-options",
            "attack": "",
            "name": "Missing Anti-clickjacking Header",
            "risk": "Medium",
            "id": "12",
            "alertRef": "10020-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 16,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "16",
            "inputVector": "",
            "url": "https://example.com/robots.txt",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "13",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 19,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "19",
            "inputVector": "",
            "url": "https://example.com/sitemap.xml",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "15",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=2226",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 15,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "15",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "18",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=2226",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 13,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "13",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "20",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 13,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "13",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "21",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=2283",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 17,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "17",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "22",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 19,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "19",
            "inputVector": "",
            "url": "https://example.com/sitemap.xml",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "23",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 16,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "16",
            "inputVector": "",
            "url": "https://example.com/robots.txt",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "26",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 13,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "13",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "31",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
            "method": "GET",
            "evidence": "",
            "pluginId": "10021",
            "cweid": "693",
            "confidence": "Medium",
            "sourceMessageId": 13,
            "wascid": "15",
            "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
            "messageId": "13",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
            "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
            "alert": "X-Content-Type-Options Header Missing",
            "param": "x-content-type-options",
            "attack": "",
            "name": "X-Content-Type-Options Header Missing",
            "risk": "Low",
            "id": "34",
            "alertRef": "10021"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=2030",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 315,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "315",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "40",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=1988",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 316,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "316",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "41",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=1971",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 328,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "328",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "59",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=2027",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 327,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "327",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "60",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=1986",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 325,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "325",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "64",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=2028",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 326,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "326",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "65",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=3020",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 628,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "628",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "78",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=3059",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 627,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "627",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "79",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=3018",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 637,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "637",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "92",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=3055",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 642,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "642",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "94",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=3009",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 639,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "639",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "98",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=2987",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 641,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "641",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "103",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=381",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 939,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "939",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "116",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=387",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 940,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "940",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "117",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=361",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 951,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "951",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "128",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=385",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 950,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "950",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "132",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=392",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 953,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "953",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "134",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=379",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 949,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "949",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "145",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=375",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1121,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1121",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "154",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=339",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1122,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1122",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "155",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=337",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1140,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1140",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "169",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=378",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1143,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1143",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "170",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=373",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1146,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1146",
            "inputVector": "",
            "url": "https://example.com",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "174",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "max-age=351",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1147,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1147",
            "inputVector": "",
            "url": "https://example.com/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "181",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1565,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1565",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "190",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1565,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1565",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "192",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1563,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1563",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "194",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1565,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1565",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "196",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1565,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1565",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "198",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1563,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1563",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "200",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1565,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1565",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "202",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612169, which evaluates to: 2025-04-14 11:59:29.",
            "method": "GET",
            "evidence": "1744612169",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1563,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1563",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "204",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1572,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1572",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/robots.txt",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "206",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1572,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1572",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/robots.txt",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "207",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1572,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1572",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/robots.txt",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "208",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612173, which evaluates to: 2025-04-14 11:59:33.",
            "method": "GET",
            "evidence": "1744612173",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1572,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1572",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/robots.txt",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "209",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1597,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1597",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "210",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1597,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1597",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "211",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612174, which evaluates to: 2025-04-14 11:59:34.",
            "method": "GET",
            "evidence": "1744612174",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1597,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1597",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "212",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1595,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1595",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "213",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1595,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1595",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "215",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612174, which evaluates to: 2025-04-14 11:59:34.",
            "method": "GET",
            "evidence": "1744612174",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1595,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1595",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "219",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1594,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1594",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/sitemap.xml",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "226",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1594,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1594",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/sitemap.xml",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "227",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1594,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1594",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/sitemap.xml",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "229",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1594,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1594",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/sitemap.xml",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "232",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1594,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1594",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/sitemap.xml",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "233",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1594,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1594",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/sitemap.xml",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "246",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1594,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1594",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/sitemap.xml",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "248",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612173, which evaluates to: 2025-04-14 11:59:33.",
            "method": "GET",
            "evidence": "1744612173",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1577,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1577",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/sitemap.xml",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "250",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612173, which evaluates to: 2025-04-14 11:59:33.",
            "method": "GET",
            "evidence": "1744612173",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1576,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1576",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "256",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1599,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1599",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "258",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1598,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1598",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "260",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612174, which evaluates to: 2025-04-14 11:59:34.",
            "method": "GET",
            "evidence": "1744612174",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1598,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1598",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "261",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1601,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1601",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "264",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1600,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1600",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "266",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The following pattern was used: \\bQUERY\\b and was detected in likely comment: \"//owasp.org' target='_blank'>Open Worldwide Application Security Project (OWASP)</a> and is developed and maintained by voluntee\", see evidence field for the suspicious comment/snippet.",
            "method": "GET",
            "evidence": "query",
            "pluginId": "10027",
            "cweid": "615",
            "confidence": "Low",
            "sourceMessageId": 1600,
            "wascid": "13",
            "description": "The response appears to contain suspicious comments which may help an attacker.",
            "messageId": "1600",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "CWE-615": "https://cwe.mitre.org/data/definitions/615.html",
                "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"
            },
            "reference": "",
            "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.",
            "alert": "Information Disclosure - Suspicious Comments",
            "param": "",
            "attack": "",
            "name": "Information Disclosure - Suspicious Comments",
            "risk": "Informational",
            "id": "267",
            "alertRef": "10027"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1600,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1600",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "268",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612174, which evaluates to: 2025-04-14 11:59:34.",
            "method": "GET",
            "evidence": "1744612174",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1600,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1600",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "269",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1734944650, which evaluates to: 2024-12-23 14:34:10.",
            "method": "GET",
            "evidence": "1734944650",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1600,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1600",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "270",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1601,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1601",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "272",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612174, which evaluates to: 2025-04-14 11:59:34.",
            "method": "GET",
            "evidence": "1744612174",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1601,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1601",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "273",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1604,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1604",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "277",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The following pattern was used: \\bQUERY\\b and was detected in likely comment: \"//www.w3.org/2000/svg\",viewBox:\"0 0 \".concat(Jt,\" \").concat(fi)})},Ri=vi&&!~Qe.classes.indexOf(\"fa-fw\")?{width:\"\".concat(Jt/fi*1\", see evidence field for the suspicious comment/snippet.",
            "method": "GET",
            "evidence": "query",
            "pluginId": "10027",
            "cweid": "615",
            "confidence": "Low",
            "sourceMessageId": 1604,
            "wascid": "13",
            "description": "The response appears to contain suspicious comments which may help an attacker.",
            "messageId": "1604",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "CWE-615": "https://cwe.mitre.org/data/definitions/615.html",
                "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"
            },
            "reference": "",
            "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.",
            "alert": "Information Disclosure - Suspicious Comments",
            "param": "",
            "attack": "",
            "name": "Information Disclosure - Suspicious Comments",
            "risk": "Informational",
            "id": "284",
            "alertRef": "10027"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1604,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1604",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "285",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612174, which evaluates to: 2025-04-14 11:59:34.",
            "method": "GET",
            "evidence": "1744612174",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1604,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1604",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "286",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1638,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1638",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/coupons_2013.md.bak",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "290",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "Apache/2.4.63 (Unix)",
            "pluginId": "10036",
            "cweid": "497",
            "confidence": "High",
            "sourceMessageId": 1638,
            "wascid": "13",
            "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",
            "messageId": "1638",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/coupons_2013.md.bak",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html",
                "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"
            },
            "reference": "https://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttps://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)\nhttps://www.troyhunt.com/shhh-dont-let-your-response-headers/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.",
            "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
            "param": "",
            "attack": "",
            "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
            "risk": "Low",
            "id": "291",
            "alertRef": "10036"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1640,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1640",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/package.json.bak",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "292",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1638,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1638",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/coupons_2013.md.bak",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "294",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1622,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1622",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "295",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "Apache/2.4.63 (Unix)",
            "pluginId": "10036",
            "cweid": "497",
            "confidence": "High",
            "sourceMessageId": 1640,
            "wascid": "13",
            "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",
            "messageId": "1640",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/package.json.bak",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html",
                "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttps://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)\nhttps://www.troyhunt.com/shhh-dont-let-your-response-headers/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.",
            "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
            "param": "",
            "attack": "",
            "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
            "risk": "Low",
            "id": "296",
            "alertRef": "10036"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1622,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1622",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "298",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1650,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1650",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/package.json.bak",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "299",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1622,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1622",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "301",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1642,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1642",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_1f2e-f73056db2f12964e.pdf",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "302",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1649,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1649",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_e551-0e2d1f3a2987bf0c.pdf",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "303",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1645,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1645",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/eastere.gg",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "304",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1649,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1649",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_e551-0e2d1f3a2987bf0c.pdf",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "305",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1645,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1645",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/eastere.gg",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "306",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1642,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1642",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_1f2e-f73056db2f12964e.pdf",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "307",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1649,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1649",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_e551-0e2d1f3a2987bf0c.pdf",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "308",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1642,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1642",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_1f2e-f73056db2f12964e.pdf",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "309",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1645,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1645",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/eastere.gg",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "310",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1644,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1644",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_9484-de502fb09b326c28.pdf",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "311",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1622,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1622",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "312",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1646,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1646",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/legal.md",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "313",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1645,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1645",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/eastere.gg",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "314",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1644,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1644",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_9484-de502fb09b326c28.pdf",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "315",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1663,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1663",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/acquisitions.md",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "316",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "1744612173, which evaluates to: 2025-04-14 11:59:33.",
            "method": "GET",
            "evidence": "1744612173",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1622,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1622",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "317",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1646,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1646",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/legal.md",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "318",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1643,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1643",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_5267-a0566a2cf1633f17.pdf",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "319",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1641,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1641",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/encrypt.pyc",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "320",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1663,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1663",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/acquisitions.md",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "321",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1644,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1644",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_9484-de502fb09b326c28.pdf",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "322",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1641,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1641",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/encrypt.pyc",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "323",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1643,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1643",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_5267-a0566a2cf1633f17.pdf",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "324",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1643,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1643",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_5267-a0566a2cf1633f17.pdf",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "326",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1665,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1665",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/incident-support.kdbx",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "327",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1646,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1646",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/legal.md",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "328",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1663,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1663",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/acquisitions.md",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "329",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1648,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1648",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_5267-b4ae5e4ff2ea1aa3.pdf",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "330",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1663,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1663",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/acquisitions.md",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "331",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1647,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1647",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/suspicious_errors.yml",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "332",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1665,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1665",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/incident-support.kdbx",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "336",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1646,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1646",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/legal.md",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "337",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1648,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1648",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_5267-b4ae5e4ff2ea1aa3.pdf",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "338",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1647,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1647",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/suspicious_errors.yml",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "339",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1641,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1641",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/encrypt.pyc",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "344",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1648,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1648",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/order_5267-b4ae5e4ff2ea1aa3.pdf",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "345",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1665,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1665",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/incident-support.kdbx",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "346",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1641,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1641",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/encrypt.pyc",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "351",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1647,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1647",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/suspicious_errors.yml",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "354",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1647,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1647",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/suspicious_errors.yml",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "357",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1702,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1702",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/layer.js:95:5",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "388",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1684,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1684",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:280:10",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "389",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1702,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1702",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/layer.js:95:5",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "390",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1684,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1684",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:280:10",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "391",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1702,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1702",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/layer.js:95:5",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "392",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1684,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1684",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:280:10",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "393",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1696,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1696",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:39:13",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "394",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1702,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1702",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/layer.js:95:5",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "395",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1684,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1684",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:280:10",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "396",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1699,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1699",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "397",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1700,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1700",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:286:9",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "398",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1696,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1696",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:39:13",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "399",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1684,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1684",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:280:10",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "400",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1703,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1703",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:55:18",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "401",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1702,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1702",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/layer.js:95:5",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "403",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1700,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1700",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:286:9",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "404",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1699,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1699",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "405",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1716,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1716",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:421:3",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "406",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1696,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1696",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:39:13",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "407",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1716,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1716",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:421:3",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "408",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1703,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1703",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:55:18",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "409",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1713,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1713",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:328:13",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "410",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1716,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1716",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:421:3",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "411",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1703,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1703",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:55:18",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "413",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1699,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1699",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "414",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1713,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1713",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:328:13",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "415",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1700,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1700",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:286:9",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "417",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1696,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1696",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:39:13",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "418",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1715,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1715",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:376:14",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "422",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1713,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1713",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:328:13",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "423",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1696,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1696",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:39:13",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "424",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1716,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1716",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:421:3",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "425",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1699,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1699",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "428",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1716,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1716",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:421:3",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "430",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1715,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1715",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:376:14",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "432",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1713,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1713",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:328:13",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "433",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1703,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1703",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:55:18",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "434",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1700,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1700",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:286:9",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "435",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1699,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1699",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "436",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1700,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1700",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:286:9",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "439",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1703,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1703",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:55:18",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "440",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1713,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1713",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:328:13",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "441",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1715,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1715",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:376:14",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "444",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1715,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1715",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:376:14",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "448",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1715,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1715",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:376:14",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "450",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1684,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1684",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:280:10",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "458",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1684,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1684",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:280:10",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "459",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1684,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1684",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:280:10",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "460",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1702,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1702",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/layer.js:95:5",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "461",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1702,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1702",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/layer.js:95:5",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "462",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1702,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1702",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/layer.js:95:5",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "463",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1699,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1699",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "464",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1716,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1716",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:421:3",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "465",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1696,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1696",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:39:13",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "466",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1699,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1699",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "467",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1696,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1696",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:39:13",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "468",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1699,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1699",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "469",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1716,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1716",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:421:3",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "470",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1696,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1696",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:39:13",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "471",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1716,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1716",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:421:3",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "472",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1709,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1709",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:286:9",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "474",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1715,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1715",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:376:14",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "475",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1703,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1703",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:55:18",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "479",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1709,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1709",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:286:9",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "480",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1715,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1715",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:376:14",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "481",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1713,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1713",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:328:13",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "482",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1715,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1715",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:376:14",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "485",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1703,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1703",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:55:18",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "486",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1709,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1709",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:286:9",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "489",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1703,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1703",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/fileServer.js:55:18",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "491",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1713,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1713",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:328:13",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "493",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1713,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1713",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/index.js:328:13",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "498",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1771,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1771",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "500",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1770,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1770",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "501",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1771,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1771",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "502",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1770,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1770",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "503",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1730,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1730",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/index.js:145:39",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "504",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1730,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1730",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/index.js:145:39",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "506",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1769,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1769",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "508",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1770,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1770",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "509",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1770,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1770",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "510",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1771,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1771",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "511",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1730,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1730",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/index.js:145:39",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "512",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1771,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1771",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "514",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1769,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1769",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "515",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1772,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1772",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "516",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1730,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1730",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/index.js:145:39",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "517",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1772,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1772",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "518",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1730,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1730",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/index.js:145:39",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "520",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1769,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1769",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "522",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1769,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1769",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "524",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1772,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1772",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "527",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1772,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1772",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "529",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1760,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1760",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "538",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1760,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1760",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "540",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1770,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1770",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/polyfills.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "541",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1771,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1771",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/runtime.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "542",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1770,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1770",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "543",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1760,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1760",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "545",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1771,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1771",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "546",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1770,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1770",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "547",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1760,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1760",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "549",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1749,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1749",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "550",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1771,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1771",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "551",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1769,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1769",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/vendor.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "552",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1749,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1749",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "553",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1769,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1769",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "554",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1769,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1769",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "555",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1749,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1749",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "556",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1749,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1749",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "557",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1730,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1730",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/index.js:145:39",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "558",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1730,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1730",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/index.js:145:39",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "560",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1772,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1772",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/styles.css",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "562",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1730,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1730",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/index.js:145:39",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "563",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1772,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1772",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "564",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1772,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1772",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "567",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1760,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1760",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/favicon_js.ico",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "578",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1760,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1760",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "581",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1774,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1774",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "582",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1773,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1773",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "584",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1760,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1760",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "585",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1774,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1774",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "586",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1749,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1749",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "587",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1773,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1773",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "589",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1749,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1749",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "590",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1774,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1774",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "591",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1749,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1749",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "592",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1774,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1774",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "593",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1776,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1776",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "594",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1773,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1773",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "595",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1773,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1773",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "596",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1776,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1776",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "599",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1786,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1786",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "602",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1776,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1776",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "607",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1786,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1786",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "608",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1776,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1776",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "609",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1786,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1786",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "616",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1786,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1786",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "617",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1774,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1774",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/polyfills.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "620",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1774,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1774",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "621",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1774,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1774",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "622",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1773,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1773",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/runtime.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "625",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1773,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1773",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "626",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1791,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1791",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "627",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1791,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1791",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "628",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1773,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1773",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "629",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1791,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1791",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "630",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1791,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1791",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "631",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1786,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1786",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/vendor.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "634",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1776,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1776",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/styles.css",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "636",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1786,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1786",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "640",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1776,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1776",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "641",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1786,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1786",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "646",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1776,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1776",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "650",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1791,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1791",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/main.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "655",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1791,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1791",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "658",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1791,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1791",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "660",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1802,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1802",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "661",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1802,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1802",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "662",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1788,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1788",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "663",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1802,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1802",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "664",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1788,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1788",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "665",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1802,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1802",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "666",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1788,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1788",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "667",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1788,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1788",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "668",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1807,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1807",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "672",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1807,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1807",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "673",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1804,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1804",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "674",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1804,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1804",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "678",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1805,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1805",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "680",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1807,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1807",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "682",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1805,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1805",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "683",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1807,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1807",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "684",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1808,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1808",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "685",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1804,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1804",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "686",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1804,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1804",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "687",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1808,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1808",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "688",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1805,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1805",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "689",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1805,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1805",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "691",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1808,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1808",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "693",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1793,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1793",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "694",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1808,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1808",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "695",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1793,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1793",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "696",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "public, max-age=0",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1740,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1740",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/announcement_encrypted.md",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "697",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1793,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1793",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "698",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1793,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1793",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "699",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1740,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1740",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/announcement_encrypted.md",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "700",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1802,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1802",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/styles.css",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "701",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1802,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1802",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "702",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1802,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1802",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "703",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1788,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1788",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "704",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1788,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1788",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "705",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1788,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1788",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "706",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1807,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1807",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/runtime.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "709",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1807,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1807",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "710",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1807,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1807",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "713",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1808,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1808",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/runtime.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "718",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1808,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1808",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "720",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1808,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1808",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "721",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1804,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1804",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/styles.css",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "722",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1804,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1804",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "725",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1804,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1804",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "726",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1805,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1805",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/styles.css",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "729",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1805,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1805",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "730",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1805,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1805",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "731",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1793,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1793",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/favicon_js.ico",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "732",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1793,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1793",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "734",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1793,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1793",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "736",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1829,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1829",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "743",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1829,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1829",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "744",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1830,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1830",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "745",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1830,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1830",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "749",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1829,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1829",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "750",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1829,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1829",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "751",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1830,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1830",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "753",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1830,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1830",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "757",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1834,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1834",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "768",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1834,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1834",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "771",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1834,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1834",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "774",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1834,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1834",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "775",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1829,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1829",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/polyfills.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "776",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1829,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1829",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "777",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1829,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1829",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "780",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1835,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1835",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "781",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1824,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1824",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "782",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1830,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1830",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/vendor.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "783",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1835,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1835",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "785",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1824,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1824",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "786",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1830,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1830",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "788",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1830,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1830",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "789",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1835,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1835",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "791",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1835,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1835",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "792",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1824,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1824",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "793",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1824,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1824",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "794",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1836,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1836",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "801",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1836,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1836",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "804",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1836,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1836",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "807",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1836,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1836",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "808",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1834,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1834",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/polyfills.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "810",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1834,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1834",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "811",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1834,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1834",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "812",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1837,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1837",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "813",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1837,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1837",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "814",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1835,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1835",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/main.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "815",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1835,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1835",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "816",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1837,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1837",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "817",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1837,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1837",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "818",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1835,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1835",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "819",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1839,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1839",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "820",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1839,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1839",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "821",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1838,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1838",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "822",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1840,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1840",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "823",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1824,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1824",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/assets/public/favicon_js.ico",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "824",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1838,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1838",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "825",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1824,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1824",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "826",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1841,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1841",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "827",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1824,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1824",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "829",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1839,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1839",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "831",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1840,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1840",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "833",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1839,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1839",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "834",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1841,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1841",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "835",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1838,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1838",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "838",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1838,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1838",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "839",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1840,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1840",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "840",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1841,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1841",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "841",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1836,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1836",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/styles.css",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "842",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1836,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1836",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "843",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1840,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1840",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "844",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1843,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1843",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "845",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1841,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1841",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "846",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1836,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1836",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "848",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1843,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1843",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "850",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1844,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1844",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "851",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1843,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1843",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "852",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1843,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1843",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "853",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1844,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1844",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "854",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1844,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1844",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "855",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1844,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1844",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "856",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1837,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1837",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/main.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "857",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1837,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1837",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "858",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1837,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1837",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "859",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1845,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1845",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "860",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1839,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1839",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/polyfills.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "861",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1845,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1845",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "862",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1841,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1841",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/main.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "863",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1838,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1838",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/main.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "864",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1840,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1840",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/runtime.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "865",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1841,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1841",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "866",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1846,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1846",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "867",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1839,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1839",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "869",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1838,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1838",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "870",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1840,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1840",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "871",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1838,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1838",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "874",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1839,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1839",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "876",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1841,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1841",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "877",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1840,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1840",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "878",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1843,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1843",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/vendor.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "879",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1843,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1843",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "880",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1845,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1845",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "881",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1845,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1845",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "882",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1843,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1843",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "883",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1846,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1846",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "885",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1848,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1848",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "886",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1844,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1844",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/runtime.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "887",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1846,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1846",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "888",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1844,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1844",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "889",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1844,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1844",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "890",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1846,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1846",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "892",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1848,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1848",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "893",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1740,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1740",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/announcement_encrypted.md",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "894",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1740,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1740",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/announcement_encrypted.md",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "896",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1848,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1848",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "897",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1848,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1848",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/vendor.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "898",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1845,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1845",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/polyfills.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "901",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1845,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1845",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "903",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1845,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1845",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "906",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1846,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1846",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/vendor.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "908",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1846,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1846",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "910",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1846,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1846",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "915",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1848,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1848",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/vendor.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "919",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1848,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1848",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/vendor.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "925",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1848,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1848",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "927",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1850,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1850",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "951",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1853,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1853",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "959",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1855,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1855",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "960",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1854,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1854",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "964",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1856,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1856",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "977",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1864,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1864",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "981",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1857,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1857",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "984",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1864,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1864",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "985",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1858,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1858",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "992",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1864,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1864",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "993",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1861,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1861",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/polyfills.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "995",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1862,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1862",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1000",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1858,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1858",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "1001",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1865,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1865",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/main.js",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "1002",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1858,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1858",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "1011",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
            "pluginId": "10017",
            "cweid": "829",
            "confidence": "Medium",
            "sourceMessageId": 1858,
            "wascid": "15",
            "description": "The page includes one or more script files from a third-party domain.",
            "messageId": "1858",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
                "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
            },
            "reference": "",
            "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
            "attack": "",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "risk": "Low",
            "id": "1014",
            "alertRef": "10017"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1851,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1851",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1021",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1865,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1865",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/main.js",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "1026",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1865,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1865",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/main.js",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "1030",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1865,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1865",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1032",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1864,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1864",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/express/lib/router/assets/public/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1033",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1863,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1863",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/styles.css",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1034",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1868,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1868",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1041",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1866,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1866",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/runtime.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1042",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1867,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1867",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/vendor.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1045",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1871,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1871",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/build/routes/assets/public/main.js",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1048",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1858,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1858",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "1050",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1858,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1858",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "1051",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612181, which evaluates to: 2025-04-14 11:59:41.",
            "method": "GET",
            "evidence": "1744612181",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1858,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1858",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1053",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612182, which evaluates to: 2025-04-14 11:59:42.",
            "method": "GET",
            "evidence": "1744612182",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1869,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1869",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/app/node_modules/serve-index/assets/public/assets/public/favicon_js.ico",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1059",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1872,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1872",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "1060",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1889,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1889",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_windows_64.exe.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "1061",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1892,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1892",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_linux_amd_64.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "1062",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1872,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1872",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "1063",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1888,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1888",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_macos_64.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "1064",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1889,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1889",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_windows_64.exe.url",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "1065",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1892,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1892",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_linux_amd_64.url",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "1066",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1888,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1888",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_macos_64.url",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "1068",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612187, which evaluates to: 2025-04-14 11:59:47.",
            "method": "GET",
            "evidence": "1744612187",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1892,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1892",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_linux_amd_64.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1069",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1891,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1891",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_linux_arm_64.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "1070",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1872,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1872",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "1072",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "1744612186, which evaluates to: 2025-04-14 11:59:46.",
            "method": "GET",
            "evidence": "1744612186",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1888,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1888",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_macos_64.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1074",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612187, which evaluates to: 2025-04-14 11:59:47.",
            "method": "GET",
            "evidence": "1744612187",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1889,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1889",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_windows_64.exe.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1076",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1887,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1887",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_linux_arm_64.url",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "1077",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612186, which evaluates to: 2025-04-14 11:59:46.",
            "method": "GET",
            "evidence": "1744612186",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1886,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1886",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_windows_64.exe.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1081",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612187, which evaluates to: 2025-04-14 11:59:47.",
            "method": "GET",
            "evidence": "1744612187",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1891,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1891",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_linux_arm_64.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1084",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612186, which evaluates to: 2025-04-14 11:59:46.",
            "method": "GET",
            "evidence": "1744612186",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1887,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1887",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_linux_arm_64.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1085",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612187, which evaluates to: 2025-04-14 11:59:47.",
            "method": "GET",
            "evidence": "1744612187",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1890,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1890",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_macos_64.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1088",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612186, which evaluates to: 2025-04-14 11:59:46.",
            "method": "GET",
            "evidence": "1744612186",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1884,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1884",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine/juicy_malware_linux_amd_64.url",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1089",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1872,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1872",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "1090",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612180, which evaluates to: 2025-04-14 11:59:40.",
            "method": "GET",
            "evidence": "1744612180",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1872,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1872",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/quarantine",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1091",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10015",
            "cweid": "525",
            "confidence": "Low",
            "sourceMessageId": 1893,
            "wascid": "13",
            "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
            "messageId": "1893",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/",
            "tags": {
                "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
                "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
            "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
            "alert": "Re-examine Cache-control Directives",
            "param": "cache-control",
            "attack": "",
            "name": "Re-examine Cache-control Directives",
            "risk": "Informational",
            "id": "1094",
            "alertRef": "10015"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10038",
            "cweid": "693",
            "confidence": "High",
            "sourceMessageId": 1893,
            "wascid": "15",
            "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
            "messageId": "1893",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "param": "",
            "attack": "",
            "name": "Content Security Policy (CSP) Header Not Set",
            "risk": "Medium",
            "id": "1095",
            "alertRef": "10038-1"
        },
        {
            "sourceid": "3",
            "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
            "method": "GET",
            "evidence": "Access-Control-Allow-Origin: *",
            "pluginId": "10098",
            "cweid": "264",
            "confidence": "Medium",
            "sourceMessageId": 1893,
            "wascid": "14",
            "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
            "messageId": "1893",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
                "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
            },
            "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
            "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
            "alert": "Cross-Domain Misconfiguration",
            "param": "",
            "attack": "",
            "name": "Cross-Domain Misconfiguration",
            "risk": "Medium",
            "id": "1097",
            "alertRef": "10098"
        },
        {
            "sourceid": "3",
            "other": "Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.",
            "method": "GET",
            "evidence": "<a href=\"\">ftp</a>",
            "pluginId": "10109",
            "cweid": "-1",
            "confidence": "Medium",
            "sourceMessageId": 1893,
            "wascid": "-1",
            "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
            "messageId": "1893",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/",
            "tags": {},
            "reference": "",
            "solution": "This is an informational alert and so no changes are required.",
            "alert": "Modern Web Application",
            "param": "",
            "attack": "",
            "name": "Modern Web Application",
            "risk": "Informational",
            "id": "1100",
            "alertRef": "10109"
        },
        {
            "sourceid": "3",
            "other": "",
            "method": "GET",
            "evidence": "",
            "pluginId": "10035",
            "cweid": "319",
            "confidence": "High",
            "sourceMessageId": 1893,
            "wascid": "15",
            "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
            "messageId": "1893",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/",
            "tags": {
                "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
                "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
                "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
            },
            "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
            "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
            "alert": "Strict-Transport-Security Header Not Set",
            "param": "",
            "attack": "",
            "name": "Strict-Transport-Security Header Not Set",
            "risk": "Low",
            "id": "1102",
            "alertRef": "10035-1"
        },
        {
            "sourceid": "3",
            "other": "1744612186, which evaluates to: 2025-04-14 11:59:46.",
            "method": "GET",
            "evidence": "1744612186",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1893,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1893",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1104",
            "alertRef": "10096"
        },
        {
            "sourceid": "3",
            "other": "1744612187, which evaluates to: 2025-04-14 11:59:47.",
            "method": "GET",
            "evidence": "1744612187",
            "pluginId": "10096",
            "cweid": "497",
            "confidence": "Low",
            "sourceMessageId": 1894,
            "wascid": "13",
            "description": "A timestamp was disclosed by the application/web server. - Unix",
            "messageId": "1894",
            "inputVector": "",
            "url": "https://demo.owasp-juice.shop/ftp/",
            "tags": {
                "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
                "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
                "CWE-497": "https://cwe.mitre.org/data/definitions/497.html"
            },
            "reference": "https://cwe.mitre.org/data/definitions/200.html",
            "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
            "alert": "Timestamp Disclosure - Unix",
            "param": "Reporting-Endpoints",
            "attack": "",
            "name": "Timestamp Disclosure - Unix",
            "risk": "Low",
            "id": "1105",
            "alertRef": "10096"
        }
    ],
    "summary": {
        "total_alerts": 0,
        "high_risks": 0,
        "medium_risks": 136,
        "low_risks": 277
    }
}